{"version":3,"sources":["scripts.js"],"names":["comments","posts","document","querySelector","search","generatePosts","allPosts","map","comment","name","email","body","join","innerHTML","findMatches","wordToMatch","filter","regex","RegExp","match","typeAhead","e","searchTerm","target","value","result","console","table","newHtml","commentName","replace","commentBody","commentEmail","addEventListener"],"mappings":"AAAA,MAAMA,WAAW,CACf;AACE,YAAU,CADZ;AAEE,QAAM,CAFR;AAGE,UAAQ,8BAHV;AAIE,WAAS,oBAJX;AAKE,UAAQ;AALV,CADe,EAQf;AACE,YAAU,CADZ;AAEE,QAAM,CAFR;AAGE,UAAQ,2CAHV;AAIE,WAAS,wBAJX;AAKE,UAAQ;AALV,CARe,EAef;AACE,YAAU,CADZ;AAEE,QAAM,CAFR;AAGE,UAAQ,+BAHV;AAIE,WAAS,qBAJX;AAKE,UAAQ;AALV,CAfe,EAsBf;AACE,YAAU,CADZ;AAEE,QAAM,CAFR;AAGE,UAAQ,gBAHV;AAIE,WAAS,eAJX;AAKE,UAAQ;AALV,CAtBe,EA6Bf;AACE,YAAU,CADZ;AAEE,QAAM,CAFR;AAGE,UAAQ,uCAHV;AAIE,WAAS,mBAJX;AAKE,UAAQ;AALV,CA7Be,CAAjB;;AAsCA,MAAMC,QAAQC,SAASC,aAAT,CAAuB,QAAvB,CAAd;AAAA,MACMC,SAASF,SAASC,aAAT,CAAuB,SAAvB,CADf;;AAGA,SAASE,aAAT,GAAyB;AACvB,QAAMC,WAAWN,SAASO,GAAT,CAAaC,WAAW;AACvC,WAAQ;;qBAESA,QAAQC,IAAK;aACrBD,QAAQE,KAAM;aACdF,QAAQG,IAAK;;KAJtB;AAOD,GARgB,EAQdC,IARc,CAQT,EARS,CAAjB;AASAX,QAAMY,SAAN,GAAkBP,QAAlB;AACD;;AAED,SAASQ,WAAT,CAAqBC,WAArB,EAAkCf,QAAlC,EAA4C;AAC1C,SAAOA,SAASgB,MAAT,CAAgBR,WAAW;AAChC,UAAMS,QAAQ,IAAIC,MAAJ,CAAWH,WAAX,EAAwB,IAAxB,CAAd;AACA,WAAOP,QAAQE,KAAR,CAAcS,KAAd,CAAoBF,KAApB,KAA8BT,QAAQG,IAAR,CAAaQ,KAAb,CAAmBF,KAAnB,CAA9B,IAA2DT,QAAQC,IAAR,CAAaU,KAAb,CAAmBF,KAAnB,CAAlE;AACD,GAHM,CAAP;AAID;;AAED,SAASG,SAAT,CAAmBC,CAAnB,EAAsB;AACpB,QAAMC,aAAaD,EAAEE,MAAF,CAASC,KAA5B;;AAEA;;AAEA,QAAMC,SAASX,YAAYQ,UAAZ,EAAwBtB,QAAxB,CAAf;;AAEA0B,UAAQC,KAAR,CAAcF,MAAd;;AAEA,QAAMG,UAAUH,OAAOlB,GAAP,CAAWC,WAAW;AACpC,UAAMS,QAAQ,IAAIC,MAAJ,CAAW,KAAKM,KAAhB,EAAuB,IAAvB,CAAd;AAAA,UACMK,cAAcrB,QAAQC,IAAR,CAAaqB,OAAb,CAAqBb,KAArB,EAA6B,oBAAmB,KAAKO,KAAM,SAA3D,CADpB;AAEMO,kBAAcvB,QAAQG,IAAR,CAAamB,OAAb,CAAqBb,KAArB,EAA6B,oBAAmB,KAAKO,KAAM,SAA3D,CAAd;AACAQ,mBAAexB,QAAQE,KAAR,CAAcoB,OAAd,CAAsBb,KAAtB,EAA8B,oBAAmB,KAAKO,KAAM,SAA5D,CAAf;AACN,WAAQ;;qBAESK,WAAY;aACpBG,YAAa;aACbD,WAAY;;KAJrB;AAOD,GAZe,EAYbnB,IAZa,CAYR,EAZQ,CAAhB;;AAcAX,QAAMY,SAAN,GAAkBe,OAAlB;AAED;;AAEDxB,OAAO6B,gBAAP,CAAwB,OAAxB,EAAiCb,SAAjC;;AAEAf","file":"all.js","sourcesContent":["const comments = [\n  {\n    \"postId\": 1,\n    \"id\": 1,\n    \"name\": \"id labore ex et quam laborum\",\n    \"email\": \"Eliseo@gardner.biz\",\n    \"body\": \"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\"\n  },\n  {\n    \"postId\": 1,\n    \"id\": 2,\n    \"name\": \"quo vero reiciendis velit similique earum\",\n    \"email\": \"Jayne_Kuhic@sydney.com\",\n    \"body\": \"est natus enim nihil est dolore omnis voluptatem numquam\\net omnis occaecati quod ullam at\\nvoluptatem error expedita pariatur\\nnihil sint nostrum voluptatem reiciendis et\"\n  },\n  {\n    \"postId\": 1,\n    \"id\": 3,\n    \"name\": \"odio adipisci rerum aut animi\",\n    \"email\": \"Nikita@garfield.biz\",\n    \"body\": \"quia molestiae reprehenderit quasi aspernatur\\naut expedita occaecati aliquam eveniet laudantium\\nomnis quibusdam delectus saepe quia accusamus maiores nam est\\ncum et ducimus et vero voluptates excepturi deleniti ratione\"\n  },\n  {\n    \"postId\": 1,\n    \"id\": 4,\n    \"name\": \"alias odio sit\",\n    \"email\": \"Lew@alysha.tv\",\n    \"body\": \"non et atque\\noccaecati deserunt quas accusantium unde odit nobis qui voluptatem\\nquia voluptas consequuntur itaque dolor\\net qui rerum deleniti ut occaecati\"\n  },\n  {\n    \"postId\": 1,\n    \"id\": 5,\n    \"name\": \"vero eaque aliquid doloribus et culpa\",\n    \"email\": \"Hayden@althea.biz\",\n    \"body\": \"harum non quasi et ratione\\ntempore iure ex voluptates in ratione\\nharum architecto fugit inventore cupiditate\\nvoluptates magni quo et\"\n  }\n]\n\nconst posts = document.querySelector('.posts'),\n      search = document.querySelector('.search');\n\nfunction generatePosts() {\n  const allPosts = comments.map(comment => {\n    return `\n      <li>\n        <p><strong>${comment.name}</strong></p>\n        <p>${comment.email}</p>\n        <p>${comment.body}</p>\n      </li>\n    `\n  }).join('');\n  posts.innerHTML = allPosts;\n}\n\nfunction findMatches(wordToMatch, comments) {\n  return comments.filter(comment => {\n    const regex = new RegExp(wordToMatch, 'gi');\n    return comment.email.match(regex) || comment.body.match(regex) || comment.name.match(regex);\n  });\n}\n\nfunction typeAhead(e) {\n  const searchTerm = e.target.value;\n\n  // if (searchTerm.length < 1) return;\n\n  const result = findMatches(searchTerm, comments);\n\n  console.table(result);\n\n  const newHtml = result.map(comment => {\n    const regex = new RegExp(this.value, 'gi'),\n          commentName = comment.name.replace(regex, `<span class=\"hl\">${this.value}</span>`);\n          commentBody = comment.body.replace(regex, `<span class=\"hl\">${this.value}</span>`);\n          commentEmail = comment.email.replace(regex, `<span class=\"hl\">${this.value}</span>`);\n    return `\n      <li>\n        <p><strong>${commentName}</strong></p>\n        <p>${commentEmail}</p>\n        <p>${commentBody}</p>\n      </li>\n    `\n  }).join('');\n\n  posts.innerHTML = newHtml;\n\n}\n\nsearch.addEventListener('keyup', typeAhead);\n\ngeneratePosts();"]}